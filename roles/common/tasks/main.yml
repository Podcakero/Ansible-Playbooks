- name: Remove initial delete-me user on Debian and Ubuntu Servers
  ansible.builtin.user:
    state: absent
    force: true
    name: delete-me
  when:
    - (ansible_facts['distribution'] == "Debian") or (ansible_facts['distribution'] == "Ubuntu")

- name: Set SELINUX to Permissive on Rocky servers
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=permissive
  when:
    - (ansible_facts['distribution'] == "Rocky") or (ansible_facts['distribution'] == "RedHat")

- name: Enable EPEL Repo on RHEL Servers
  community.general.rhsm_repository:
    name: codeready-builder-for-rhel-{{ ansible_facts['distribution_major_version'] }}-{{ ansible_facts['architecture'] }}-rpms
  when: 
    - ansible_facts['distribution'] == "RedHat"
    - ansible_facts['distribution_major_version'] < 10

- name: Enable EPEL Repo on RHEL 10 Servers
  community.general.rhsm_repository:
    name: crb
  when:
    - ansible_facts['distribution'] == "RedHat"
    - ansible_facts['distribution_major_version'] == 10

- name: Install EPEL on Rocky Servers
  ansible.builtin.dnf:
    state: present
    pkg: "dnf install epel-release"
  when:
    - (ansible_facts['distribution'] == "Rocky") or (ansible_facts['distribution'] == "RedHat")

- name: Update cache on Debian and Ubuntu Servers
  ansible.builtin.apt:
    update_cache: true
    state: latest
  when:
    - (ansible_facts['distribution'] == "Debian") or (ansible_facts['distribution'] == "Ubuntu")

- name: Install packages
  ansible.builtin.package:
    state: latest
    name: "{{ packages }}"

- ansible.builtin.import_tasks: upgrade_packages.yml

- ansible.builtin.import_tasks: sshd_config.yml

- ansible.builtin.import_tasks: ssh_keys.yml

- ansible.builtin.import_tasks: enroll_tpm.yml

- name: Create cockpit disallowed users file if it doesn't exist
  ansible.builtin.lineinfile:
    path: /etc/cockpit/disallowed-users
    line: '# List of users which are not allowed to login to Cockpit'
    create: true
    mode: "0644"

- name: Remove entry of root in cockpit disallowed users
  ansible.builtin.lineinfile:
    path: /etc/cockpit/disallowed-users
    regexp: '^root'
    state: absent

- name: Create motd file if it does not exist
  ansible.builtin.lineinfile:
    path: /etc/motd
    line: temp
    create: true
    mode: "0644"

- name: Remove text in motd file
  ansible.builtin.lineinfile:
    path: /etc/motd
    regexp: '.*'
    state: absent

- name: Enable and Start cockpit.socket
  ansible.builtin.systemd_service:
    state: started
    enabled: true
    name: cockpit.socket

- name: Disable and Mask firewalld
  ansible.builtin.systemd_service:
    state: stopped
    enabled: false
    masked: true
    name: firewalld.service
  when:
    - (ansible_facts['distribution'] == "Rocky") or (ansible_facts['distribution'] == "RedHat")

- name: Restart SSHD
  ansible.builtin.systemd_service:
    state: restarted
    name: sshd.service
  when:
    - (ansible_facts['distribution'] == "Rocky") or (ansible_facts['distribution'] == "RedHat") or (ansible_facts['distribution'] == "Debian")

- name: Restart SSH on Ubuntu
  ansible.builtin.systemd_service:
    state: restarted
    name: ssh.service
  when:
    - ansible_facts['distribution'] == "Ubuntu"
